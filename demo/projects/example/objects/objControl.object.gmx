<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName></spriteName>
  <solid>0</solid>
  <visible>1</visible>
  <depth>200</depth>
  <persistent>0</persistent>
  <parentName></parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
t=0;
timer = 0;
pu_timer = 60 * 3;
show_debug_message(scrTest());
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
show_debug_message("hello from room start event!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("control")
k_rand = 10 + (timer/50);

if (irandom(200) &lt; k_rand)
{
    with (instance_create(irandom(view_wview[0]), 0, objBullet))
    {
        angle_speed = irandom(60)/30 - 1;
        hspeed = (irandom(60)/30 - 1) / 10;
        vspeed = 2 + (irandom(60)/30 - 1) / 10;
    }
}

if (k_rand &lt; 200)
{
    timer++;
}

if (pu_timer &lt; 60 * 5)
{
    pu_timer++;
}
else
{
    with (instance_create(irandom(view_wview[0]), 0, objPowerup))
    {
        vspeed = 1.5
    }
    pu_timer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// shadow

var drop_shadow_x = 8;
var drop_shadow_y = 8;

with (all)
{
    if (visible)
    {
        if (sprite_index &lt; 10000 &amp;&amp; sprite_index)
        {
            draw_sprite_general(sprite_index, image_index, 0, 0, sprite_get_width(sprite_index), sprite_get_height(sprite_index),
            drop_shadow_x + x - sprite_get_yoffset(sprite_index) * dsin(image_angle) - dcos(image_angle) * sprite_get_xoffset(sprite_index),
            drop_shadow_y + y - sprite_get_yoffset(sprite_index) * dcos(image_angle) + dsin(image_angle) * sprite_get_xoffset(sprite_index),
            image_xscale, image_yscale, image_angle, c_black, c_black, c_black, c_black, image_alpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
